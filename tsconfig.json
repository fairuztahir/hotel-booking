{
    "version": "4.0.2",
    "compilerOptions": {
        "module": "commonjs", /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */
        "target": "es2017", /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', or 'ESNEXT'. */
        // "noImplicitAny": true, /* Raise error on expressions and declarations with an implied 'any' type. */
        "outDir": "./dist", /* Redirect output structure to the directory. */
        "sourceMap": true,  /* Generates corresponding '.map' file. */
        "removeComments": true, /* Do not emit comments to output. */
        "moduleResolution": "node",  /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
        "baseUrl": ".", /* Base directory to resolve non-absolute module names. */
        "paths": {
          "*": [
              "node_modules/*"
          ]
        }, /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
        "allowSyntheticDefaultImports": true, /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
        "esModuleInterop": true, /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
        
        /* Experimental Options */
        "emitDecoratorMetadata": true, /* Enables experimental support for emitting type metadata for decorators. */
        "experimentalDecorators": true, /* Enables experimental support for ES7 decorators. */
        "skipLibCheck": true,

        /* Source Map Options */
        // "sourceRoot": "",                      /* Specify the location where debugger should locate TypeScript files instead of source locations. */
        // "mapRoot": "",                         /* Specify the location where debugger should locate map files instead of generated locations. */
        // "inlineSourceMap": true,               /* Emit a single file with source maps instead of having a separate file. */
        // "inlineSources": true,                 /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */

        /* Advanced Options */
        "forceConsistentCasingInFileNames": true /* Disallow inconsistently-cased references to the same file. */
    },
    "include": [
        "./src/**/*"
    ]
}